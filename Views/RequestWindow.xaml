<Window x:Class="RestApiTester.RequestWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:RestApiTester;assembly="
        Title="Show/Create Request" Height="550" Width="700" WindowStartupLocation="CenterOwner" Style="{StaticResource window}">
    <Grid Style="{StaticResource windowGrid}">
        <Grid.Resources>
            <Style TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label Style="{StaticResource paramHeader}">HTTP method (verb)</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="1">URL (address)</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="2">Accepted content types</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="3">Authentication: Username</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="4">Authentication: Password</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="5">Parameters</Label>
        <Label Style="{StaticResource paramHeader}" Grid.Row="6">Additional headers</Label>
        <ComboBox Name="fldMethod" Grid.Column="1" SelectedItem="{Binding Method, ValidatesOnDataErrors=True}" ItemsSource="{x:Static local:HttpMethods.Default}" IsEnabled="{Binding IsNew}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Padding="0" Foreground="{Binding Color}" Text="{Binding Name}" FontWeight="Bold" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Bd" Padding="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <Grid Width="{Binding ActualWidth, ElementName=fldMethod}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <local:HttpMethodLabel HorizontalAlignment="Left" />
                                        <TextBlock Grid.Column="1" FontSize="14" Text="{Binding Description}" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Url, ValidatesOnDataErrors=True}" IsReadOnly="{Binding IsReadOnly}" />
        <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Accept, ValidatesOnDataErrors=True}" IsReadOnly="{Binding IsReadOnly}" />
        <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding AuthUsername, ValidatesOnDataErrors=True}" IsReadOnly="{Binding IsReadOnly}" />
        <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding AuthPassword, ValidatesOnDataErrors=True}" IsReadOnly="{Binding IsReadOnly}" />
        <DataGrid Grid.Column="1" Grid.Row="5" ItemsSource="{Binding Parameters}" IsReadOnly="{Binding IsReadOnly}" MinHeight="150" CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Parameter" Binding="{Binding Name, ValidatesOnDataErrors=True}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Value" Binding="{Binding Value, ValidatesOnDataErrors=True}" />
                <DataGridCheckBoxColumn Header="via body?" Binding="{Binding ViaRequestBody, ValidatesOnDataErrors=True}" ToolTipService.ToolTip="If checked, the parameter will be passed via the request body. Otherwise, it will feature in the query part of the URL." />
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Grid.Column="1" Grid.Row="6" ItemsSource="{Binding Headers}" IsReadOnly="{Binding IsReadOnly}" MinHeight="150" CanUserAddRows="True" CanUserDeleteRows="True" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="HTTP header" Binding="{Binding Name, ValidatesOnDataErrors=True}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="DataGridCell.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Value" Binding="{Binding Value, ValidatesOnDataErrors=True}" />
            </DataGrid.Columns>
        </DataGrid>
        <Button Grid.Column="1" Grid.Row="7" Visibility="{Binding IsNew, Converter={StaticResource BoolToVis}}" Command="{Binding SendCommand}">Send request</Button>
    </Grid>
</Window>
